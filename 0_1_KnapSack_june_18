#include <bits/stdc++.h>
#define ll long long int

ll dp[1005][1005];
ll f(vector<int> &values, vector<int> &weights, int n, int w,int i){
	if(i==n) return 0;
	if(w==0) return 0;
	if(dp[i][w]!=-1) return dp[i][w];
    if (w >= weights[i]) {
        ll pick = values[i] + f(values, weights, n, w - weights[i], i + 1);
        ll nopick = f(values, weights, n, w, i + 1);
		return dp[i][w]=max(pick,nopick);
    }
	return dp[i][w]=f(values, weights, n, w, i + 1);;
}



int maxProfit(vector<int> &values, vector<int> &weights, int n, int w)
{
	memset(dp,-1, sizeof(dp));
	return f(values,weights,n,w,0);
}
