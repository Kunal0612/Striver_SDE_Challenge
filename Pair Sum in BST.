#include <bits/stdc++.h> 
/**********************************************************

    Following is the Binary Tree Node structure:

    template <typename T>
    class BinaryTreeNode {
        public: 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
                delete left;
            if (right)
                delete right;
        }
    };
***********************************************************/
void f(BinaryTreeNode<int> *root,vector<int> &v){
    if(root==NULL) return;
    f(root->left,v);
    v.push_back(root->data);
    f(root->right,v);
}
bool pairSumBst(BinaryTreeNode<int> *root, int k)
{
    // Write your code here
    vector<int> v;
    f(root,v);
    unordered_map<int,int> mp;
    for(auto &x:v){
        int r=k-x;
        if(mp.count(r)){
            return true;
        }
        mp[x]++;
    }
    return false;
}
