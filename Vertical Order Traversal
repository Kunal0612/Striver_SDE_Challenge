class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        queue<pair<TreeNode*,pair<int,int>>> q;
        unordered_set<TreeNode*> st;
        map<int,map<int,multiset<int>>> mp;
        int cnt=0;
        q.push({root,{0,0}});
        st.insert(root);
        mp[0][0].insert(root->val);
        while(!q.empty()){
            int sz=q.size();
            while(sz--){
                auto node=q.front();
                q.pop();
                TreeNode* tmp=node.first;
                int x=node.second.second;
                int y=node.second.first;
                if(tmp->left and !st.count(tmp->left)){
                    int x1=x-1;
                    int y1=y+1;
                    q.push({tmp->left,{y1,x1}});
                    mp[x1][y1].insert(tmp->left->val);
                    st.insert(tmp->left);
                }
                if(tmp->right and !st.count(tmp->right)){
                    int x1=x+1;
                    int y1=y+1;
                    q.push({tmp->right,{y1,x1}});
                    mp[x1][y1].insert(tmp->right->val);
                    st.insert(tmp->right);
                }
            }
        }
        vector<vector<int>> ans;
        for(auto x:mp){
            vector<int> v;
            for(auto it:x.second){
                for(auto y:it.second){
                    //cout<<y<<" ";
                    v.push_back(y);
                }
            }
            ans.push_back(v);
        }
        return ans;
    }
};
