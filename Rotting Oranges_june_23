#include <bits/stdc++.h>
int minTimeToRot(vector<vector<int>>& grid, int n, int m)
{
    int mngo = 0;
            vector<vector<int>> v={{1,0},{0,1},{-1,0},{0,-1}};
            queue<pair<int, int>> q;
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < m; j++)
                {
                    if (grid[i][j] == 1)
                    {
                        mngo++;
                    }
                    if (grid[i][j] == 2)
                    {
                        q.push({ i,j });
                    }
                }
            }
            vector<vector < int>> vis(n, vector<int> (m, 0));
            if (mngo == 0) return 0;
            int ans=0;
            while (!q.empty())
            {
                ans++;
                int sz = q.size();
                for (int i = 0; i < sz; i++)
                {
                    auto r = q.front();
                    q.pop();
                    for (auto it: v)
                    {
                        int x = r.first + it[0];
                        int y = r.second + it[1];
                        if ((x >= 0 and x < n) and(y >= 0 and y < m))
                        {
                            if ((grid[x][y] == 1) and vis[x][y] == 0)
                            {
                                q.push({x,y});
                                vis[x][y] = 1;
                                mngo--;
                            }
                        }
                    }
                }
                if(mngo==0) return ans;
            }
            return -1;
}
