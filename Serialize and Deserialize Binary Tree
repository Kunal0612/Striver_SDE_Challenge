#include <bits/stdc++.h>
/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

string serializeTree(TreeNode<int> *root){
    if(!root) return "";
        string s="";
        queue<TreeNode<int> *> q;
        q.push(root);
        while(!q.empty()){
            auto node=q.front();
            q.pop();
            if(node==NULL) s+="#,";
            else{
                s+=to_string(node->data)+',';
                q.push(node->left);
                q.push(node->right);
            }
        }
        return s;
}

TreeNode<int>* deserializeTree(string &data){
    if(data=="") return NULL;
        stringstream ss(data);
        string str;
        getline(ss,str,',');
        TreeNode<int> * root=new TreeNode<int>(stoi(str));
        queue<TreeNode<int> *> q;
        q.push(root);
        while(!q.empty()){
            TreeNode<int> * node=q.front();
            q.pop();
            getline(ss,str,',');
            if(str=="#"){
                node->left=NULL;
            }
            else{
                TreeNode<int> * lft=new TreeNode<int>(stoi(str));
                node->left=lft;
                q.push(lft);
            }
            getline(ss,str,',');
            if(str=="#"){
                node->right=NULL;
            }
            else{
                TreeNode<int> * rgt=new TreeNode<int>(stoi(str));
                node->right=rgt;
                q.push(rgt);
            }
        }
        return root;
}



