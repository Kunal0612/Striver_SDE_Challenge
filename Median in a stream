#include <bits/stdc++.h>
vector<int> findMedian(vector<int> &arr, int n){
	priority_queue<int> maxi;
	priority_queue<int, vector<int>, greater<int>> mini;
	vector<int> ans;
	for(auto x:arr){
		if(maxi.empty() or x<=maxi.top()){
			maxi.push(x);
		}
		else{
			mini.push(x);
		}
		if(maxi.size()>mini.size()+1){
			int r=maxi.top();
			mini.push(r);
			maxi.pop();
		}
		else if(mini.size()>maxi.size()+1){
			int r=mini.top();
			maxi.push(r);
			mini.pop();
		}
		if(maxi.size()==mini.size()){
			int r=(maxi.top()+mini.top())/2;
			ans.push_back(r);
		}
		else if(maxi.size()>mini.size()) ans.push_back(maxi.top());
		else ans.push_back(mini.top());
	}
	return ans;
}
