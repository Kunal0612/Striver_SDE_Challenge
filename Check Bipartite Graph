#include <bits/stdc++.h>
bool isGraphBirpatite(vector<vector<int>> &edges) {
	unordered_map<int,vector<int>> mp;
	for(int i=0;i<edges.size();i++){
		for(int j=0;j<edges[0].size();j++){
			if(edges[i][j]==1){
				mp[i].push_back(j);
			}
		}
	}
	int n=edges.size();
	vector<int> vis(n,0);
	    for(int i=0;i<n;i++){
	        if(vis[i]) continue;
	        queue<int> q;
	        q.push(i);
	        vis[i]=1;  //-1 1
	        while(!q.empty()){
	            int r=q.front();
	            q.pop();
	            for(auto x:mp[r]){
	                if(vis[x]==0){
	                    if(vis[r]==1){
	                        vis[x]=2;
	                    }
	                    else vis[x]=1;
	                    q.push(x);
	                }
	                else if(vis[r]==vis[x]) return false;
	            }
	        }
	    }
	    return true;
}
